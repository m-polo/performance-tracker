services:
  # web:
  #   container_name: web
  #   build:
  #     context: .
  #     dockerfile: ./apps/web/Dockerfile
  #   restart: always
  #   ports:
  #     - 8000:8000
  # api:
  #   depends_on:
  #     postgres:         
  #       condition: service_started
  #   container_name: api
  #   build:
  #     context: .
  #     dockerfile: ./apps/api/Dockerfile
  #   restart: always
  #   networks:
  #     - backend
  #   ports:
  #     - 3000:3000
  postgres:
    image: postgres:latest
    restart: always
    ports:
      - 5432:5432
    networks:
      - backend
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: tracker
      POSTGRES_PASSWORD: tracker
      POSTGRES_DB: performance_tracker
  prisma:
    depends_on:
      postgres:         
        condition: service_started
    restart: always
    build: 
      context: .
      dockerfile: ./Dockerfile
    networks:
      - backend

volumes:
  postgres-data:

networks:
  backend:
    name: backend